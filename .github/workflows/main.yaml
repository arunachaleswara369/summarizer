name: CI/CD Pipeline

on:
  push:
    branches:
      - master

env:
  ACR_NAME: nlpacr3
  IMAGE_TAG: latest
  VM_SSH_USER: azureuser
  VM_IP_ADDRESS: 52.149.152.162
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Azure
        run: az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID

      - name: Set Azure Subscription
        run: az account set --subscription $SUBSCRIPTION_ID

      - name: Build and Push Docker Image to ACR
        run: |
          docker build -t $ACR_NAME.azurecr.io/my-function-app:$IMAGE_TAG .
          docker login $ACR_NAME.azurecr.io -u $ACR_NAME -p ${{ secrets.ACR_PASSWORD }}
          docker push $ACR_NAME.azurecr.io/my-function-app:$IMAGE_TAG

  pull-and-run-on-vm:
    name: Pull Docker Image and Run on Azure VM
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Azure
        run: az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID

      - name: Copy Docker Image to Azure VM
        run: |
          docker login $ACR_NAME.azurecr.io -u $ACR_NAME -p ${{ secrets.ACR_PASSWORD }}
          docker save -o image.tar $ACR_NAME.azurecr.io/my-function-app:$IMAGE_TAG
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null image.tar $VM_SSH_USER@$VM_IP_ADDRESS:~/image.tar

      - name: SSH into Azure VM and Load Docker Image
        run: |
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $VM_SSH_USER@$VM_IP_ADDRESS 'docker load -i ~/image.tar'

      - name: Stop and Remove Previous Docker Containers
        run: |
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $VM_SSH_USER@$VM_IP_ADDRESS 'docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)'

      - name: Run Docker Container on Azure VM
        run: |
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $VM_SSH_USER@$VM_IP_ADDRESS 'docker run -d -p 8080:8080 --name my-function-app $ACR_NAME.azurecr.io/my-function-app:$IMAGE_TAG'
